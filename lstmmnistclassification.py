# -*- coding: utf-8 -*-
"""LstmMnistClassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rxRcFPHgxMwv1KClv4mkrTzyb4de_aQc
"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

mnist = keras.datasets.mnist

(X_train,Y_train),(X_test,Y_test) = mnist.load_data()

X_train,X_test = X_train.astype('float32')/255.0,X_test.astype('float32')/255.0

model = keras.models.Sequential()
model.add(keras.Input(shape=(28,28)))
model.add(layers.Reshape((28,28,1),input_shape = (28,28)))
model.add(keras.layers.Conv2D(4,(3,3),(1,1),activation='relu',input_shape = (28,28,1)))
model.add(layers.MaxPool2D((2,2)))
model.add(layers.Reshape((13,52),input_shape = (13,13,4)))
model.add(layers.Dropout(0.05))
model.add(layers.LSTM(64))
model.add(layers.Dense(10,activation='softmax'))
print(model.summary())

loss = keras.losses.sparse_categorical_crossentropy
optimizer = keras.optimizers.Adam(learning_rate = 0.001)
metrics = ['accuracy']

model.compile(optimizer=optimizer,loss=loss,metrics=metrics)

batch_size = 32
epochs = 5

model.fit(X_train,Y_train,batch_size=batch_size,epochs=epochs,verbose=1)

model.evaluate(X_test,Y_test)